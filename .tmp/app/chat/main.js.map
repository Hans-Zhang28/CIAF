{"version":3,"sources":["../../../client/app/chat/main.js"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["'use strict';\n\nangular.module('eWebApp')\n  .controller('ChatCtrl', function($scope, Auth, $location) {\n      var FADE_TIME = 150; // ms\n      var TYPING_TIMER_LENGTH = 400; // ms\n      var COLORS = [\n        '#e21400', '#91580f', '#f8a700', '#f78b00',\n        '#58dc00', '#287b00', '#a8f07a', '#4ae8c4',\n        '#3b88eb', '#3824aa', '#a700ff', '#d300e7'\n      ];\n\n      // Initialize varibles\n      var $window = $(window);\n      var $usernameInput = $('.usernameInput'); // Input for username\n      var $messages = $('.messages'); // Messages area\n      var $inputMessage = $('.inputMessage'); // Input message input box\n\n      var $loginPage = $('.login.page'); // The login page\n      var $chatPage = $('.chat.page'); // The chatroom page\n\n      // Prompt for setting a username\n      var username;\n      var connected = false;\n      var typing = false;\n      var lastTypingTime;\n      var $currentInput = $usernameInput.focus();\n\n      var socket = io();\n\n      function addParticipantsMessage (data) {\n        var message = '';\n        if (data.numUsers === 1) {\n          message += \"there's 1 participant\";\n        } else {\n          message += \"there are \" + data.numUsers + \" participants\";\n        }\n        log(message);\n      }\n\n      // Sets the client's username\n      function setUsername () {\n        username = cleanInput($usernameInput.val().trim());\n\n        // If the username is valid\n        if (username) {\n          $loginPage.fadeOut();\n          $chatPage.show();\n          $loginPage.off('click');\n          $currentInput = $inputMessage.focus();\n\n          // Tell the server your username\n          socket.emit('add user', username);\n        }\n      }\n\n      // Sends a chat message\n      function sendMessage () {\n        var message = $inputMessage.val();\n        // Prevent markup from being injected into the message\n        message = cleanInput(message);\n        // if there is a non-empty message and a socket connection\n        if (message && connected) {\n          $inputMessage.val('');\n          addChatMessage({\n            username: username,\n            message: message\n          });\n          // tell server to execute 'new message' and send along one parameter\n          socket.emit('new message', message);\n        }\n      }\n\n      // Log a message\n      function log (message, options) {\n        var $el = $('<li>').addClass('log').text(message);\n        addMessageElement($el, options);\n      }\n\n      // Adds the visual chat message to the message list\n      $scope.addChatMessage = function(data, options) {\n        // Don't fade the message in if there is an 'X was typing'\n        $scope.typingMessages = $scope.getTypingMessages(data);\n        options = options || {};\n        if ($typingMessages.length !== 0) {\n          options.fade = false;\n          $typingMessages.remove();\n        }\n\n        var $usernameDiv = $('<span class=\"username\"/>')\n          .text(data.username)\n          .css('color', getUsernameColor(data.username));\n        var $messageBodyDiv = $('<span class=\"messageBody\">')\n          .text(data.message);\n\n        var typingClass = data.typing ? 'typing' : '';\n        var $messageDiv = $('<li class=\"message\"/>')\n          .data('username', data.username)\n          .addClass(typingClass)\n          .append($usernameDiv, $messageBodyDiv);\n\n        addMessageElement($messageDiv, options);\n      }\n\n      // Adds the visual chat typing message\n      function addChatTyping (data) {\n        data.typing = true;\n        data.message = 'is typing';\n        addChatMessage(data);\n      }\n\n      // Removes the visual chat typing message\n      function removeChatTyping (data) {\n        getTypingMessages(data).fadeOut(function () {\n          $(this).remove();\n        });\n      }\n\n      // Adds a message element to the messages and scrolls to the bottom\n      // el - The element to add as a message\n      // options.fade - If the element should fade-in (default = true)\n      // options.prepend - If the element should prepend\n      //   all other messages (default = false)\n      function addMessageElement (el, options) {\n        var $el = $(el);\n\n        // Setup default options\n        if (!options) {\n          options = {};\n        }\n        if (typeof options.fade === 'undefined') {\n          options.fade = true;\n        }\n        if (typeof options.prepend === 'undefined') {\n          options.prepend = false;\n        }\n\n        // Apply options\n        if (options.fade) {\n          $el.hide().fadeIn(FADE_TIME);\n        }\n        if (options.prepend) {\n          $messages.prepend($el);\n        } else {\n          $messages.append($el);\n        }\n        $messages[0].scrollTop = $messages[0].scrollHeight;\n      }\n\n      // Prevents input from having injected markup\n      function cleanInput (input) {\n        return $('<div/>').text(input).text();\n      }\n\n      // Updates the typing event\n      function updateTyping () {\n        if (connected) {\n          if (!typing) {\n            typing = true;\n            socket.emit('typing');\n          }\n          lastTypingTime = (new Date()).getTime();\n\n          setTimeout(function () {\n            var typingTimer = (new Date()).getTime();\n            var timeDiff = typingTimer - lastTypingTime;\n            if (timeDiff >= TYPING_TIMER_LENGTH && typing) {\n              socket.emit('stop typing');\n              typing = false;\n            }\n          }, TYPING_TIMER_LENGTH);\n        }\n      }\n\n      // Gets the 'X is typing' messages of a user\n      function getTypingMessages (data) {\n        return $('.typing.message').filter(function (i) {\n          return $(this).data('username') === data.username;\n        });\n      }\n\n      // Gets the color of a username through our hash function\n      function getUsernameColor (username) {\n        // Compute hash code\n        var hash = 7;\n        for (var i = 0; i < username.length; i++) {\n           hash = username.charCodeAt(i) + (hash << 5) - hash;\n        }\n        // Calculate color\n        var index = Math.abs(hash % COLORS.length);\n        return COLORS[index];\n      }\n\n      // Keyboard events\n\n      $window.keydown(function (event) {\n        // Auto-focus the current input when a key is typed\n        if (!(event.ctrlKey || event.metaKey || event.altKey)) {\n          $currentInput.focus();\n        }\n        // When the client hits ENTER on their keyboard\n        if (event.which === 13) {\n          if (username) {\n            sendMessage();\n            socket.emit('stop typing');\n            typing = false;\n          } else {\n            setUsername();\n          }\n        }\n      });\n\n      $inputMessage.on('input', function() {\n        updateTyping();\n      });\n\n      // Click events\n\n      // Focus input when clicking anywhere on login page\n      $loginPage.click(function () {\n        $currentInput.focus();\n      });\n\n      // Focus input when clicking on the message input's border\n      $inputMessage.click(function () {\n        $inputMessage.focus();\n      });\n\n      // Socket events\n\n      // Whenever the server emits 'login', log the login message\n      socket.on('login', function (data) {\n        connected = true;\n        // Display the welcome message\n        var message = \"Welcome to Socket.IO Chat – \";\n        log(message, {\n          prepend: true\n        });\n        addParticipantsMessage(data);\n      });\n\n      // Whenever the server emits 'new message', update the chat body\n      socket.on('new message', function (data) {\n        addChatMessage(data);\n      });\n\n      // Whenever the server emits 'user joined', log it in the chat body\n      socket.on('user joined', function (data) {\n        log(data.username + ' joined');\n        addParticipantsMessage(data);\n      });\n\n      // Whenever the server emits 'user left', log it in the chat body\n      socket.on('user left', function (data) {\n        log(data.username + ' left');\n        addParticipantsMessage(data);\n        removeChatTyping(data);\n      });\n\n      // Whenever the server emits 'typing', show the typing message\n      socket.on('typing', function (data) {\n        addChatTyping(data);\n      });\n\n      // Whenever the server emits 'stop typing', kill the typing message\n      socket.on('stop typing', function (data) {\n        removeChatTyping(data);\n      });\n});\n"]}